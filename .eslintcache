[{"/Users/tomerkroytoro/limpi/src/App.js":"1","/Users/tomerkroytoro/limpi/src/index.js":"2","/Users/tomerkroytoro/limpi/src/layouts/MainLayout.tsx":"3","/Users/tomerkroytoro/limpi/src/layouts/consts.ts":"4","/Users/tomerkroytoro/limpi/src/components/LimpiDotsSideBar/LimpiDotsSideBar.tsx":"5","/Users/tomerkroytoro/limpi/src/components/LimpiDotsSideBar/index.ts":"6","/Users/tomerkroytoro/limpi/src/components/LimpiBurgerSideBar/LimpiBurgerSideBar.tsx":"7","/Users/tomerkroytoro/limpi/src/components/LimpiBurgerSideBar/index.ts":"8","/Users/tomerkroytoro/limpi/src/components/LimpiArrowRoute/LimpiArrowRoute.tsx":"9","/Users/tomerkroytoro/limpi/src/components/LimpiArrowRoute/index.ts":"10","/Users/tomerkroytoro/limpi/src/pages/LimpiHome/LimpiHome.tsx":"11","/Users/tomerkroytoro/limpi/src/pages/LimpiHome/consts.ts":"12","/Users/tomerkroytoro/limpi/src/pages/About/About.tsx":"13","/Users/tomerkroytoro/limpi/src/pages/About/index.ts":"14","/Users/tomerkroytoro/limpi/src/pages/Association/Association.tsx":"15","/Users/tomerkroytoro/limpi/src/utils/jumpTo.ts":"16","/Users/tomerkroytoro/limpi/src/pages/SportsModify/consts.ts":"17","/Users/tomerkroytoro/limpi/src/pages/SportsModify/SportsModify.tsx":"18","/Users/tomerkroytoro/limpi/src/pages/SportsModify/components/DisablitiyCategory.tsx":"19","/Users/tomerkroytoro/limpi/src/pages/SportsModify/components/index.ts":"20","/Users/tomerkroytoro/limpi/src/components/Icon/types.ts":"21","/Users/tomerkroytoro/limpi/src/components/Icon/index.ts":"22","/Users/tomerkroytoro/limpi/src/pages/SportsModify/index.ts":"23","/Users/tomerkroytoro/limpi/src/pages/SportsModify/components/SportLogo.tsx":"24","/Users/tomerkroytoro/limpi/src/components/Icon/Icon.tsx":"25","/Users/tomerkroytoro/limpi/src/components/SportPopup/index.ts":"26","/Users/tomerkroytoro/limpi/src/components/SportPopup/SportPopup.tsx":"27","/Users/tomerkroytoro/limpi/src/components/SportPopup/Popup.tsx":"28","/Users/tomerkroytoro/limpi/src/pages/Association/index.ts":"29"},{"size":140,"mtime":1613852222717,"results":"30","hashOfConfig":"31"},{"size":198,"mtime":1611962773031,"results":"32","hashOfConfig":"31"},{"size":560,"mtime":1613142221758,"results":"33","hashOfConfig":"31"},{"size":202,"mtime":1612896503187,"results":"34","hashOfConfig":"31"},{"size":1063,"mtime":1613852222721,"results":"35","hashOfConfig":"31"},{"size":35,"mtime":1613852222722,"results":"36","hashOfConfig":"31"},{"size":1820,"mtime":1613852222720,"results":"37","hashOfConfig":"31"},{"size":37,"mtime":1613852222720,"results":"38","hashOfConfig":"31"},{"size":476,"mtime":1613852222719,"results":"39","hashOfConfig":"31"},{"size":35,"mtime":1613852222719,"results":"40","hashOfConfig":"31"},{"size":1022,"mtime":1613852222771,"results":"41","hashOfConfig":"31"},{"size":499,"mtime":1613822070341,"results":"42","hashOfConfig":"31"},{"size":586,"mtime":1613852222769,"results":"43","hashOfConfig":"31"},{"size":25,"mtime":1613852222769,"results":"44","hashOfConfig":"31"},{"size":1243,"mtime":1613852222770,"results":"45","hashOfConfig":"31"},{"size":382,"mtime":1613852222775,"results":"46","hashOfConfig":"31"},{"size":5303,"mtime":1613843093244,"results":"47","hashOfConfig":"31"},{"size":4499,"mtime":1613852222772,"results":"48","hashOfConfig":"31"},{"size":5749,"mtime":1613852222772,"results":"49","hashOfConfig":"31"},{"size":38,"mtime":1613852222773,"results":"50","hashOfConfig":"31"},{"size":529,"mtime":1613825208950,"results":"51","hashOfConfig":"31"},{"size":49,"mtime":1613852222718,"results":"52","hashOfConfig":"31"},{"size":32,"mtime":1613852222774,"results":"53","hashOfConfig":"31"},{"size":550,"mtime":1613852222773,"results":"54","hashOfConfig":"31"},{"size":2703,"mtime":1613595261003,"results":"55","hashOfConfig":"31"},{"size":24,"mtime":1613839772992,"results":"56","hashOfConfig":"31"},{"size":372,"mtime":1613852222723,"results":"57","hashOfConfig":"31"},{"size":504,"mtime":1613852222723,"results":"58","hashOfConfig":"31"},{"size":31,"mtime":1613852222770,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1gvwe",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/Users/tomerkroytoro/limpi/src/App.js",[],["124","125"],"/Users/tomerkroytoro/limpi/src/index.js",[],["126","127"],"/Users/tomerkroytoro/limpi/src/layouts/MainLayout.tsx",[],"/Users/tomerkroytoro/limpi/src/layouts/consts.ts",[],"/Users/tomerkroytoro/limpi/src/components/LimpiDotsSideBar/LimpiDotsSideBar.tsx",[],["128","129"],"/Users/tomerkroytoro/limpi/src/components/LimpiDotsSideBar/index.ts",[],"/Users/tomerkroytoro/limpi/src/components/LimpiBurgerSideBar/LimpiBurgerSideBar.tsx",[],"/Users/tomerkroytoro/limpi/src/components/LimpiBurgerSideBar/index.ts",[],"/Users/tomerkroytoro/limpi/src/components/LimpiArrowRoute/LimpiArrowRoute.tsx",[],"/Users/tomerkroytoro/limpi/src/components/LimpiArrowRoute/index.ts",[],["130","131"],"/Users/tomerkroytoro/limpi/src/pages/LimpiHome/LimpiHome.tsx",[],"/Users/tomerkroytoro/limpi/src/pages/LimpiHome/consts.ts",[],"/Users/tomerkroytoro/limpi/src/pages/About/About.tsx",[],"/Users/tomerkroytoro/limpi/src/pages/About/index.ts",[],"/Users/tomerkroytoro/limpi/src/pages/Association/Association.tsx",[],"/Users/tomerkroytoro/limpi/src/utils/jumpTo.ts",[],"/Users/tomerkroytoro/limpi/src/pages/SportsModify/consts.ts",[],"/Users/tomerkroytoro/limpi/src/pages/SportsModify/SportsModify.tsx",["132"],"import React, { FC, useCallback, useMemo, useState } from 'react';\nimport { DisabilityCategory } from './components';\nimport {\n  disabilitiesCategories,\n  disabilitiesSubCategoris,\n  IDisabilitiesCategory,\n  IDisabilitiesSubCategory,\n  ISportCategory,\n  SportCateories,\n} from './consts';\nimport styles from './styles.module.scss';\nimport classnames from 'classnames';\nimport { SportLogo } from './components/SportLogo';\nimport { toInteger } from 'lodash';\nimport { SportPopup } from '../../components/SportPopup/SportPopup';\nimport { Icon } from '../../components/Icon';\nimport closeImage from '../../images/close.svg';\n\nexport const SportsModify: FC = () => {\n  const [state, setState] = useState({});\n  const [activeSports, setActiveSports] = useState<ISportCategory[]>(SportCateories);\n  const activeSportIds = useMemo(() => activeSports.map((activeSport: ISportCategory) => activeSport.id), [\n    activeSports,\n  ]);\n\n  const [activePopup, setActivePopup] = useState<ISportCategory | undefined>();\n\n  //check if there are not matching disablities ids\n  const checkValid = (arrOne: number[], arrTwo: number[]) => {\n    let flag = true;\n    arrOne.forEach((id: number) => {\n      if (arrTwo.includes(id)) flag = false;\n    });\n    return flag;\n  };\n\n  //reset disablities\n  const reset = () => {\n    setState({});\n    setActiveSports(SportCateories);\n  };\n\n  const getColor = useCallback((num: number) => {\n    switch (num) {\n      case 0:\n        return 'green';\n      case 1:\n        return 'orange';\n      case 2:\n        return 'turqiz';\n      default:\n        return 'blue';\n    }\n  }, []);\n\n  const SportLogos = useMemo(\n    () => (\n      <div className={styles.SportIcons}>\n        {!!activePopup && (\n          <SportPopup backgroundColor={getColor(toInteger((activePopup.id - 1) / 6))}>\n            <img\n              src={closeImage}\n              alt='burger'\n              className={styles.closeButton}\n              onClick={() => setActivePopup(undefined)}\n            />\n            <div className={styles.popupBody}>\n              <h1>{activePopup.title}</h1>\n              <Icon type={activePopup.name} />\n            </div>\n          </SportPopup>\n        )}\n        {SportCateories.map((sportCategory: ISportCategory, idx: number) => {\n          return (\n            <SportLogo\n              type={sportCategory.name}\n              key={idx}\n              disabled={!activeSportIds.includes(sportCategory.id)}\n              color={getColor(toInteger((sportCategory.id - 1) / 6))}\n              onClick={() => (!!activePopup ? setActivePopup(undefined) : setActivePopup(sportCategory))}\n            />\n          );\n        })}\n      </div>\n    ),\n    [getColor, activeSportIds, activePopup],\n  );\n\n  const changedisability = useCallback(\n    (disablitity: IDisabilitiesSubCategory, deleteOne?: number) => {\n      const model: any = state;\n      if (disablitity?.id) {\n        const { categoryId, id: subCetegoryId } = disablitity;\n        model[categoryId] = disabilitiesSubCategoris[subCetegoryId - 1]?.id;\n      }\n      if (deleteOne) {\n        delete model[deleteOne];\n      }\n\n      setState(model);\n      const wouldBeActiveSports = SportCateories.filter((category: ISportCategory) =>\n        checkValid(category.categoryIds, Object.values(model)),\n      );\n      setActiveSports(wouldBeActiveSports);\n    },\n    [state],\n  );\n\n  const rightSideMenu = useCallback(() => {\n    return (\n      <div className={styles.sideMenu}>\n        <h1>התאמת ענף ספורט לפי סיווג</h1>\n        <hr />\n        <div className={classnames('d-flex flex-column', styles.chooseMenu)}>\n          {disabilitiesCategories.map((category: IDisabilitiesCategory, idx: number) => (\n            <DisabilityCategory\n              title={category.title}\n              key={idx}\n              subcategories={disabilitiesSubCategoris.filter(\n                (subCategory: IDisabilitiesSubCategory) => subCategory.categoryId === category.id,\n              )}\n              onSubCategoryChose={changedisability}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }, [changedisability]);\n\n  return (\n    <div className={styles.fullContainer}>\n      <div className={styles.titleContainer}>\n        <h1>מצאו את ענפי הספורט המתאימים לכם</h1>\n        <h2>בלחיצה על כל אחד תקבלו מידע נוסף</h2>\n      </div>\n      <div className={styles.container}>\n        {rightSideMenu()}\n        {SportLogos}\n      </div>\n    </div>\n  );\n};\n","/Users/tomerkroytoro/limpi/src/pages/SportsModify/components/DisablitiyCategory.tsx",["133"],"/Users/tomerkroytoro/limpi/src/pages/SportsModify/components/index.ts",[],"/Users/tomerkroytoro/limpi/src/components/Icon/types.ts",[],"/Users/tomerkroytoro/limpi/src/components/Icon/index.ts",[],"/Users/tomerkroytoro/limpi/src/pages/SportsModify/index.ts",[],"/Users/tomerkroytoro/limpi/src/pages/SportsModify/components/SportLogo.tsx",["134"],"import React, { FC } from 'react';\nimport { Icon, IconProps, IconType } from '../../../components/Icon';\nimport styles from './styles.module.scss';\nimport classnames from 'classnames';\n\ninterface ISportLogo {\n  type: IconType;\n  color: string;\n  disabled?: boolean;\n  onClick: () => void;\n}\n\nexport const SportLogo: FC<ISportLogo> = ({ type, color, disabled, onClick }) => {\n  return (\n    <div onClick={() => onClick?.()} className={classnames(styles.Icon, styles[color], disabled && styles.disabled)}>\n      <Icon type={type} />\n    </div>\n  );\n};\n","/Users/tomerkroytoro/limpi/src/components/Icon/Icon.tsx",[],"/Users/tomerkroytoro/limpi/src/components/SportPopup/index.ts",[],"/Users/tomerkroytoro/limpi/src/components/SportPopup/SportPopup.tsx",[],"/Users/tomerkroytoro/limpi/src/components/SportPopup/Popup.tsx",[],"/Users/tomerkroytoro/limpi/src/pages/Association/index.ts",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"135","replacedBy":"139"},{"ruleId":"137","replacedBy":"140"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"135","replacedBy":"141"},{"ruleId":"137","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":38,"column":9,"nodeType":"145","messageId":"146","endLine":38,"endColumn":14},{"ruleId":"147","severity":1,"message":"148","line":30,"column":6,"nodeType":"149","endLine":30,"endColumn":16,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"151","line":2,"column":16,"nodeType":"145","messageId":"146","endLine":2,"endColumn":25},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],["152"],["153"],["152"],["153"],"@typescript-eslint/no-unused-vars","'reset' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onSubCategoryChose' and 'subcategories'. Either include them or remove the dependency array. If 'onSubCategoryChose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["154"],"'IconProps' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},"Update the dependencies array to be: [onSubCategoryChose, stateIds, subcategories]",{"range":"157","text":"158"},[1174,1184],"[onSubCategoryChose, stateIds, subcategories]"]