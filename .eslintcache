[{"/Users/tomerkroytoro/limpi/src/utils/jumpTo.ts":"1","/Users/tomerkroytoro/limpi/src/pages/Footer/index.ts":"2","/Users/tomerkroytoro/limpi/src/pages/Association/Association.tsx":"3","/Users/tomerkroytoro/limpi/src/pages/SportsModify/components/DisablitiyCategory.tsx":"4","/Users/tomerkroytoro/limpi/src/components/Icon/Icon.tsx":"5","/Users/tomerkroytoro/limpi/src/pages/LimpiHome/consts.ts":"6","/Users/tomerkroytoro/limpi/src/pages/Footer/Footer.tsx":"7","/Users/tomerkroytoro/limpi/src/pages/Tips/Tips.tsx":"8","/Users/tomerkroytoro/limpi/src/pages/Tips/consts.ts":"9","/Users/tomerkroytoro/limpi/src/pages/LimpiHome/LimpiHome.tsx":"10","/Users/tomerkroytoro/limpi/src/pages/Successes/Successes.tsx":"11","/Users/tomerkroytoro/limpi/src/index.js":"12","/Users/tomerkroytoro/limpi/src/components/LimpiBurgerSideBar/index.ts":"13","/Users/tomerkroytoro/limpi/src/pages/About/index.ts":"14","/Users/tomerkroytoro/limpi/src/pages/Successes/index.ts":"15","/Users/tomerkroytoro/limpi/src/pages/LimpiHome/index.ts":"16","/Users/tomerkroytoro/limpi/src/components/Icon/index.ts":"17","/Users/tomerkroytoro/limpi/src/components/LimpiArrowRoute/LimpiArrowRoute.tsx":"18","/Users/tomerkroytoro/limpi/src/pages/SportsModify/consts.ts":"19","/Users/tomerkroytoro/limpi/src/pages/About/About.tsx":"20","/Users/tomerkroytoro/limpi/src/pages/SportsModify/SportsModify.tsx":"21","/Users/tomerkroytoro/limpi/src/components/Icon/types.ts":"22"},{"size":382,"mtime":1614727984418,"results":"23","hashOfConfig":"24"},{"size":26,"mtime":1614726465855,"results":"25","hashOfConfig":"24"},{"size":1274,"mtime":1614758875641,"results":"26","hashOfConfig":"24"},{"size":5877,"mtime":1614949431447,"results":"27","hashOfConfig":"24"},{"size":2703,"mtime":1614727984394,"results":"28","hashOfConfig":"24"},{"size":855,"mtime":1614948955057,"results":"29","hashOfConfig":"24"},{"size":1353,"mtime":1614728496901,"results":"30","hashOfConfig":"24"},{"size":1439,"mtime":1614759070052,"results":"31","hashOfConfig":"24"},{"size":1753,"mtime":1614729342825,"results":"32","hashOfConfig":"24"},{"size":1044,"mtime":1614758385487,"results":"33","hashOfConfig":"24"},{"size":2370,"mtime":1614785705455,"results":"34","hashOfConfig":"24"},{"size":198,"mtime":1614784560150,"results":"35","hashOfConfig":"24"},{"size":37,"mtime":1613852222720,"results":"36","hashOfConfig":"24"},{"size":25,"mtime":1613852222769,"results":"37","hashOfConfig":"24"},{"size":29,"mtime":1614726465858,"results":"38","hashOfConfig":"24"},{"size":29,"mtime":1613852222771,"results":"39","hashOfConfig":"24"},{"size":49,"mtime":1613852222718,"results":"40","hashOfConfig":"24"},{"size":476,"mtime":1613852222719,"results":"41","hashOfConfig":"24"},{"size":21778,"mtime":1614946693639,"results":"42","hashOfConfig":"24"},{"size":1189,"mtime":1614947321821,"results":"43","hashOfConfig":"24"},{"size":5419,"mtime":1614949507724,"results":"44","hashOfConfig":"24"},{"size":529,"mtime":1614727984395,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gvwe",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tomerkroytoro/limpi/src/utils/jumpTo.ts",[],"/Users/tomerkroytoro/limpi/src/pages/Footer/index.ts",[],"/Users/tomerkroytoro/limpi/src/pages/Association/Association.tsx",[],"/Users/tomerkroytoro/limpi/src/pages/SportsModify/components/DisablitiyCategory.tsx",["91","92"],"/Users/tomerkroytoro/limpi/src/components/Icon/Icon.tsx",[],"/Users/tomerkroytoro/limpi/src/pages/LimpiHome/consts.ts",[],"/Users/tomerkroytoro/limpi/src/pages/Footer/Footer.tsx",["93"],"/Users/tomerkroytoro/limpi/src/pages/Tips/Tips.tsx",["94","95"],"/Users/tomerkroytoro/limpi/src/pages/Tips/consts.ts",["96"],"/Users/tomerkroytoro/limpi/src/pages/LimpiHome/LimpiHome.tsx",["97","98"],"/Users/tomerkroytoro/limpi/src/pages/Successes/Successes.tsx",["99","100"],"/Users/tomerkroytoro/limpi/src/index.js",[],"/Users/tomerkroytoro/limpi/src/components/LimpiBurgerSideBar/index.ts",[],"/Users/tomerkroytoro/limpi/src/pages/About/index.ts",[],"/Users/tomerkroytoro/limpi/src/pages/Successes/index.ts",[],"/Users/tomerkroytoro/limpi/src/pages/LimpiHome/index.ts",[],"/Users/tomerkroytoro/limpi/src/components/Icon/index.ts",[],"/Users/tomerkroytoro/limpi/src/components/LimpiArrowRoute/LimpiArrowRoute.tsx",[],"/Users/tomerkroytoro/limpi/src/pages/SportsModify/consts.ts",[],"/Users/tomerkroytoro/limpi/src/pages/About/About.tsx",[],"/Users/tomerkroytoro/limpi/src/pages/SportsModify/SportsModify.tsx",["101","102"],"import React, { FC, useCallback, useMemo, useState } from 'react';\nimport { DisabilityCategory } from './components';\nimport {\n  disabilitiesCategories,\n  disabilitiesSubCategoris,\n  IDisabilitiesCategory,\n  IDisabilitiesSubCategory,\n  ISportCategory,\n  SportCateories,\n} from './consts';\nimport styles from './styles.module.scss';\nimport classnames from 'classnames';\nimport { SportLogo } from './components/SportLogo';\nimport { toInteger } from 'lodash';\nimport { SportPopup } from '../../components/SportPopup/SportPopup';\nimport { Icon } from '../../components/Icon';\nimport closeImage from '../../images/close.svg';\n\nexport const SportsModify: FC = () => {\n  const [state, setState] = useState({});\n  const [activeSports, setActiveSports] = useState<ISportCategory[]>(SportCateories);\n  const activeSportIds = useMemo(() => activeSports.map((activeSport: ISportCategory) => activeSport.id), [\n    activeSports,\n  ]);\n  const [currentOpen, setCurrentOpen] = useState<number| undefined>();\n  const [activePopup, setActivePopup] = useState<ISportCategory | undefined>();\n  const toggleOpen = useCallback((id: number)=> currentOpen === id ? setCurrentOpen(undefined) : setCurrentOpen(id),[currentOpen, setCurrentOpen]);\n\n  //check if there are not matching disablities ids\n  const checkValid = (arrOne: number[], arrTwo: number[]) => {\n    let flag = true;\n    arrOne.forEach((id: number) => {\n      if (arrTwo.includes(id)) flag = false;\n    });\n    return flag;\n  };\n\n  //reset disablities\n  const reset = () => {\n    setState({});\n    setActiveSports(SportCateories);\n  };\n\n  const getColor = useCallback((num: number) => {\n    switch (num) {\n      case 0:\n        return 'green';\n      case 1:\n        return 'orange';\n      case 2:\n        return 'turqiz';\n      default:\n        return 'blue';\n    }\n  }, []);\n\n  const SportLogos = useMemo(\n    () => (\n      <div className={styles.SportIcons}>\n        <h6 className={styles.wasFound}>נמצאו {activeSportIds.length} ענפי ספורט מתאימים</h6>\n        {!!activePopup && (\n          <SportPopup backgroundColor={getColor(toInteger((activePopup.id - 1) / 6))}>\n            <img\n              src={closeImage}\n              alt='burger'\n              className={styles.closeButton}\n              onClick={() => setActivePopup(undefined)}\n            />\n            <div className={styles.popupBody}>\n              <h1>{activePopup.title}</h1>\n              <p>\n                {activePopup.description}\n                <span>\n                  הענף נשמע לכם מעניין? <br /> פנו ל\n                  <a href='https://isad.org.il/' rel=\"noreferrer\" target='_blank'>\n                    התאחדות הישראלית\n                  </a>{' '}\n                  לספורט נכים וגלו איפה אפשר להשתתף!\n                </span>\n              </p>\n              <Icon type={activePopup.name} />\n            </div>\n          </SportPopup>\n        )}\n        {SportCateories.map((sportCategory: ISportCategory, idx: number) => {\n          return (\n            <SportLogo\n              type={sportCategory.name}\n              key={idx}\n              disabled={!activeSportIds.includes(sportCategory.id)}\n              color={getColor(toInteger((sportCategory.id - 1) / 6))}\n              onClick={() => (!!activePopup ? setActivePopup(undefined) : setActivePopup(sportCategory))}\n            />\n          );\n        })}\n      </div>\n    ),\n    [getColor, activeSportIds, activePopup],\n  );\n\n  const changedisability = useCallback(\n    (disablitity: IDisabilitiesSubCategory, deleteOne?: number) => {\n      const model: any = state;\n      if (disablitity?.id) {\n        const { categoryId, id: subCetegoryId } = disablitity;\n        model[categoryId] = disabilitiesSubCategoris[subCetegoryId - 1]?.id;\n      }\n      if (deleteOne) {\n        delete model[deleteOne];\n      }\n\n      setState(model);\n      const wouldBeActiveSports = SportCateories.filter((category: ISportCategory) =>\n        checkValid(category.categoryIds, Object.values(model)),\n      );\n      setActiveSports(wouldBeActiveSports);\n    },\n    [state],\n  );\n\n  console.log(currentOpen);\n\n  const rightSideMenu = useCallback(() => {\n    return (\n      <div className={styles.sideMenu}>\n        <h1>התאמת ענף ספורט לפי סיווג</h1>\n        <hr />\n        <div className={classnames('d-flex flex-column', styles.chooseMenu)}>\n          {disabilitiesCategories.map((category: IDisabilitiesCategory, idx: number) => (\n            <DisabilityCategory\n              title={category.title}\n              key={idx}\n              isOpen={currentOpen === category.id}\n              toggleOpen={toggleOpen}\n              subcategories={disabilitiesSubCategoris.filter(\n                (subCategory: IDisabilitiesSubCategory) => subCategory.categoryId === category.id,\n              )}\n              onSubCategoryChose={changedisability}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }, [changedisability, currentOpen, toggleOpen]);\n\n  return (\n    <div className={styles.fullContainer}>\n      <div className={styles.titleContainer}>\n        <h1>מצאו את ענפי הספורט המתאימים לכם</h1>\n        <h2>בלחיצה על כל אחד תקבלו מידע נוסף</h2>\n      </div>\n      <div className={styles.container}>\n        {rightSideMenu()}\n        {SportLogos}\n      </div>\n    </div>\n  );\n};\n","/Users/tomerkroytoro/limpi/src/components/Icon/types.ts",[],{"ruleId":"103","severity":1,"message":"104","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":20},{"ruleId":"107","severity":1,"message":"108","line":32,"column":6,"nodeType":"109","endLine":32,"endColumn":16,"suggestions":"110"},{"ruleId":"103","severity":1,"message":"111","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":12},{"ruleId":"103","severity":1,"message":"112","line":9,"column":9,"nodeType":"105","messageId":"106","endLine":9,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":18,"column":13,"nodeType":"115","endLine":21,"endColumn":48},{"ruleId":"103","severity":1,"message":"116","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":16},{"ruleId":"103","severity":1,"message":"111","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":12},{"ruleId":"103","severity":1,"message":"117","line":10,"column":14,"nodeType":"105","messageId":"106","endLine":10,"endColumn":31},{"ruleId":"103","severity":1,"message":"118","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":27,"column":19,"nodeType":"115","endLine":27,"endColumn":56},{"ruleId":"103","severity":1,"message":"119","line":39,"column":9,"nodeType":"105","messageId":"106","endLine":39,"endColumn":14},{"ruleId":"107","severity":1,"message":"120","line":144,"column":6,"nodeType":"109","endLine":144,"endColumn":37,"suggestions":"121"},"@typescript-eslint/no-unused-vars","'useBoolean' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onSubCategoryChose' and 'subcategories'. Either include them or remove the dependency array. If 'onSubCategoryChose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["122"],"'logo' is defined but never used.","'getStyles' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Caroline' is defined but never used.","'scrollTopPosition' is assigned a value but never used.","'successebox' is assigned a value but never used.","'reset' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'toggleOpen'. Either include it or remove the dependency array.",["123"],{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [onSubCategoryChose, stateIds, subcategories]",{"range":"128","text":"129"},"Update the dependencies array to be: [changedisability, currentOpen, toggleOpen]",{"range":"130","text":"131"},[1191,1201],"[onSubCategoryChose, stateIds, subcategories]",[4880,4911],"[changedisability, currentOpen, toggleOpen]"]